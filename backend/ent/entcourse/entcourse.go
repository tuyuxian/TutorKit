// Code generated by ent, DO NOT EDIT.

package entcourse

import (
	"fmt"
)

const (
	// Label holds the string label denoting the entcourse type in the database.
	Label = "ent_course"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCourseUrl holds the string denoting the courseurl field in the database.
	FieldCourseUrl = "course_url"
	// FieldPaymentMethod holds the string denoting the paymentmethod field in the database.
	FieldPaymentMethod = "payment_method"
	// FieldPaymentAmount holds the string denoting the paymentamount field in the database.
	FieldPaymentAmount = "payment_amount"
	// FieldStartDate holds the string denoting the startdate field in the database.
	FieldStartDate = "start_date"
	// FieldEndDate holds the string denoting the enddate field in the database.
	FieldEndDate = "end_date"
	// FieldMonday holds the string denoting the monday field in the database.
	FieldMonday = "monday"
	// FieldTuesday holds the string denoting the tuesday field in the database.
	FieldTuesday = "tuesday"
	// FieldWednesday holds the string denoting the wednesday field in the database.
	FieldWednesday = "wednesday"
	// FieldThursday holds the string denoting the thursday field in the database.
	FieldThursday = "thursday"
	// FieldFriday holds the string denoting the friday field in the database.
	FieldFriday = "friday"
	// FieldSaturday holds the string denoting the saturday field in the database.
	FieldSaturday = "saturday"
	// FieldSunday holds the string denoting the sunday field in the database.
	FieldSunday = "sunday"
	// EdgeCourseOwner holds the string denoting the courseowner edge name in mutations.
	EdgeCourseOwner = "courseOwner"
	// Table holds the table name of the entcourse in the database.
	Table = "ent_courses"
	// CourseOwnerTable is the table that holds the courseOwner relation/edge. The primary key declared below.
	CourseOwnerTable = "ent_user_course"
	// CourseOwnerInverseTable is the table name for the EntUser entity.
	// It exists in this package in order to avoid circular dependency with the "entuser" package.
	CourseOwnerInverseTable = "ent_users"
)

// Columns holds all SQL columns for entcourse fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCourseUrl,
	FieldPaymentMethod,
	FieldPaymentAmount,
	FieldStartDate,
	FieldEndDate,
	FieldMonday,
	FieldTuesday,
	FieldWednesday,
	FieldThursday,
	FieldFriday,
	FieldSaturday,
	FieldSunday,
}

var (
	// CourseOwnerPrimaryKey and CourseOwnerColumn2 are the table columns denoting the
	// primary key for the courseOwner relation (M2M).
	CourseOwnerPrimaryKey = []string{"ent_user_id", "ent_course_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)

// PaymentMethod defines the type for the "paymentMethod" enum field.
type PaymentMethod string

// PaymentMethod values.
const (
	PaymentMethodTimes PaymentMethod = "times"
	PaymentMethodHours PaymentMethod = "hours"
)

func (pm PaymentMethod) String() string {
	return string(pm)
}

// PaymentMethodValidator is a validator for the "paymentMethod" field enum values. It is called by the builders before save.
func PaymentMethodValidator(pm PaymentMethod) error {
	switch pm {
	case PaymentMethodTimes, PaymentMethodHours:
		return nil
	default:
		return fmt.Errorf("entcourse: invalid enum value for paymentMethod field: %q", pm)
	}
}
