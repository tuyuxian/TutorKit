// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EntAttendancesColumns holds the columns for the "ent_attendances" table.
	EntAttendancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "date", Type: field.TypeTime},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "day", Type: field.TypeTime},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "hours", Type: field.TypeFloat64, Nullable: true},
		{Name: "checked_by_tutor", Type: field.TypeBool, Default: false},
		{Name: "checked_by_student", Type: field.TypeBool, Default: false},
		{Name: "checked_by_parent", Type: field.TypeBool, Default: false},
		{Name: "ent_course_attendance", Type: field.TypeInt, Nullable: true},
		{Name: "ent_user_attendance", Type: field.TypeInt, Nullable: true},
	}
	// EntAttendancesTable holds the schema information for the "ent_attendances" table.
	EntAttendancesTable = &schema.Table{
		Name:       "ent_attendances",
		Columns:    EntAttendancesColumns,
		PrimaryKey: []*schema.Column{EntAttendancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_attendances_ent_courses_attendance",
				Columns:    []*schema.Column{EntAttendancesColumns[12]},
				RefColumns: []*schema.Column{EntCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ent_attendances_ent_users_attendance",
				Columns:    []*schema.Column{EntAttendancesColumns[13]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntCommentsColumns holds the columns for the "ent_comments" table.
	EntCommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "content", Type: field.TypeString},
		{Name: "share", Type: field.TypeEnum, Enums: []string{"PUBLIC", "PRIVATE"}, Default: "PUBLIC"},
		{Name: "ent_post_comment", Type: field.TypeInt, Nullable: true},
		{Name: "ent_user_comment", Type: field.TypeInt, Nullable: true},
	}
	// EntCommentsTable holds the schema information for the "ent_comments" table.
	EntCommentsTable = &schema.Table{
		Name:       "ent_comments",
		Columns:    EntCommentsColumns,
		PrimaryKey: []*schema.Column{EntCommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_comments_ent_posts_comment",
				Columns:    []*schema.Column{EntCommentsColumns[6]},
				RefColumns: []*schema.Column{EntPostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ent_comments_ent_users_comment",
				Columns:    []*schema.Column{EntCommentsColumns[7]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntCoursesColumns holds the columns for the "ent_courses" table.
	EntCoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "course_url", Type: field.TypeString},
		{Name: "payment_method", Type: field.TypeEnum, Enums: []string{"TIMES", "HOURS"}},
		{Name: "payment_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "monday", Type: field.TypeBool, Default: false},
		{Name: "tuesday", Type: field.TypeBool, Default: false},
		{Name: "wednesday", Type: field.TypeBool, Default: false},
		{Name: "thursday", Type: field.TypeBool, Default: false},
		{Name: "friday", Type: field.TypeBool, Default: false},
		{Name: "saturday", Type: field.TypeBool, Default: false},
		{Name: "sunday", Type: field.TypeBool, Default: false},
		{Name: "monday_start_time", Type: field.TypeTime, Nullable: true},
		{Name: "monday_end_time", Type: field.TypeTime, Nullable: true},
		{Name: "tuesday_start_time", Type: field.TypeTime, Nullable: true},
		{Name: "tuesday_end_time", Type: field.TypeTime, Nullable: true},
		{Name: "wednesday_start_time", Type: field.TypeTime, Nullable: true},
		{Name: "wednesday_end_time", Type: field.TypeTime, Nullable: true},
		{Name: "thursday_start_time", Type: field.TypeTime, Nullable: true},
		{Name: "thursday_end_time", Type: field.TypeTime, Nullable: true},
		{Name: "friday_start_time", Type: field.TypeTime, Nullable: true},
		{Name: "friday_end_time", Type: field.TypeTime, Nullable: true},
		{Name: "saturday_start_time", Type: field.TypeTime, Nullable: true},
		{Name: "saturday_end_time", Type: field.TypeTime, Nullable: true},
		{Name: "sunday_start_time", Type: field.TypeTime, Nullable: true},
		{Name: "sunday_end_time", Type: field.TypeTime, Nullable: true},
	}
	// EntCoursesTable holds the schema information for the "ent_courses" table.
	EntCoursesTable = &schema.Table{
		Name:       "ent_courses",
		Columns:    EntCoursesColumns,
		PrimaryKey: []*schema.Column{EntCoursesColumns[0]},
	}
	// EntPostsColumns holds the columns for the "ent_posts" table.
	EntPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "content", Type: field.TypeString},
		{Name: "share", Type: field.TypeEnum, Enums: []string{"PUBLIC", "PRIVATE"}, Default: "PUBLIC"},
		{Name: "ent_course_post", Type: field.TypeInt, Nullable: true},
		{Name: "ent_user_post", Type: field.TypeInt, Nullable: true},
	}
	// EntPostsTable holds the schema information for the "ent_posts" table.
	EntPostsTable = &schema.Table{
		Name:       "ent_posts",
		Columns:    EntPostsColumns,
		PrimaryKey: []*schema.Column{EntPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_posts_ent_courses_post",
				Columns:    []*schema.Column{EntPostsColumns[6]},
				RefColumns: []*schema.Column{EntCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ent_posts_ent_users_post",
				Columns:    []*schema.Column{EntPostsColumns[7]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntTodosColumns holds the columns for the "ent_todos" table.
	EntTodosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "date", Type: field.TypeTime},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "day", Type: field.TypeTime},
		{Name: "lesson", Type: field.TypeString, Nullable: true},
		{Name: "homework", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"IN_PROGRESS", "COMPLETED"}, Default: "IN_PROGRESS"},
		{Name: "ent_course_todo", Type: field.TypeInt, Nullable: true},
		{Name: "ent_user_todo", Type: field.TypeInt, Nullable: true},
	}
	// EntTodosTable holds the schema information for the "ent_todos" table.
	EntTodosTable = &schema.Table{
		Name:       "ent_todos",
		Columns:    EntTodosColumns,
		PrimaryKey: []*schema.Column{EntTodosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_todos_ent_courses_todo",
				Columns:    []*schema.Column{EntTodosColumns[10]},
				RefColumns: []*schema.Column{EntCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ent_todos_ent_users_todo",
				Columns:    []*schema.Column{EntTodosColumns[11]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntUsersColumns holds the columns for the "ent_users" table.
	EntUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "first_name", Type: field.TypeString, Size: 20},
		{Name: "last_name", Type: field.TypeString, Size: 20},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "date_of_birth", Type: field.TypeTime},
		{Name: "profile_picture_url", Type: field.TypeString, Nullable: true},
		{Name: "is_tutor", Type: field.TypeBool, Default: false},
		{Name: "is_student", Type: field.TypeBool, Default: false},
		{Name: "is_parent", Type: field.TypeBool, Default: false},
	}
	// EntUsersTable holds the schema information for the "ent_users" table.
	EntUsersTable = &schema.Table{
		Name:       "ent_users",
		Columns:    EntUsersColumns,
		PrimaryKey: []*schema.Column{EntUsersColumns[0]},
	}
	// EntPostShareWithColumns holds the columns for the "ent_post_shareWith" table.
	EntPostShareWithColumns = []*schema.Column{
		{Name: "ent_post_id", Type: field.TypeInt},
		{Name: "ent_user_id", Type: field.TypeInt},
	}
	// EntPostShareWithTable holds the schema information for the "ent_post_shareWith" table.
	EntPostShareWithTable = &schema.Table{
		Name:       "ent_post_shareWith",
		Columns:    EntPostShareWithColumns,
		PrimaryKey: []*schema.Column{EntPostShareWithColumns[0], EntPostShareWithColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_post_shareWith_ent_post_id",
				Columns:    []*schema.Column{EntPostShareWithColumns[0]},
				RefColumns: []*schema.Column{EntPostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ent_post_shareWith_ent_user_id",
				Columns:    []*schema.Column{EntPostShareWithColumns[1]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EntUserCourseColumns holds the columns for the "ent_user_course" table.
	EntUserCourseColumns = []*schema.Column{
		{Name: "ent_user_id", Type: field.TypeInt},
		{Name: "ent_course_id", Type: field.TypeInt},
	}
	// EntUserCourseTable holds the schema information for the "ent_user_course" table.
	EntUserCourseTable = &schema.Table{
		Name:       "ent_user_course",
		Columns:    EntUserCourseColumns,
		PrimaryKey: []*schema.Column{EntUserCourseColumns[0], EntUserCourseColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_user_course_ent_user_id",
				Columns:    []*schema.Column{EntUserCourseColumns[0]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ent_user_course_ent_course_id",
				Columns:    []*schema.Column{EntUserCourseColumns[1]},
				RefColumns: []*schema.Column{EntCoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EntUserJoinColumns holds the columns for the "ent_user_join" table.
	EntUserJoinColumns = []*schema.Column{
		{Name: "ent_user_id", Type: field.TypeInt},
		{Name: "ent_course_id", Type: field.TypeInt},
	}
	// EntUserJoinTable holds the schema information for the "ent_user_join" table.
	EntUserJoinTable = &schema.Table{
		Name:       "ent_user_join",
		Columns:    EntUserJoinColumns,
		PrimaryKey: []*schema.Column{EntUserJoinColumns[0], EntUserJoinColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_user_join_ent_user_id",
				Columns:    []*schema.Column{EntUserJoinColumns[0]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ent_user_join_ent_course_id",
				Columns:    []*schema.Column{EntUserJoinColumns[1]},
				RefColumns: []*schema.Column{EntCoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EntUserParentColumns holds the columns for the "ent_user_parent" table.
	EntUserParentColumns = []*schema.Column{
		{Name: "ent_user_id", Type: field.TypeInt},
		{Name: "child_id", Type: field.TypeInt},
	}
	// EntUserParentTable holds the schema information for the "ent_user_parent" table.
	EntUserParentTable = &schema.Table{
		Name:       "ent_user_parent",
		Columns:    EntUserParentColumns,
		PrimaryKey: []*schema.Column{EntUserParentColumns[0], EntUserParentColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_user_parent_ent_user_id",
				Columns:    []*schema.Column{EntUserParentColumns[0]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ent_user_parent_child_id",
				Columns:    []*schema.Column{EntUserParentColumns[1]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EntUserTutorColumns holds the columns for the "ent_user_tutor" table.
	EntUserTutorColumns = []*schema.Column{
		{Name: "ent_user_id", Type: field.TypeInt},
		{Name: "student_id", Type: field.TypeInt},
	}
	// EntUserTutorTable holds the schema information for the "ent_user_tutor" table.
	EntUserTutorTable = &schema.Table{
		Name:       "ent_user_tutor",
		Columns:    EntUserTutorColumns,
		PrimaryKey: []*schema.Column{EntUserTutorColumns[0], EntUserTutorColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_user_tutor_ent_user_id",
				Columns:    []*schema.Column{EntUserTutorColumns[0]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ent_user_tutor_student_id",
				Columns:    []*schema.Column{EntUserTutorColumns[1]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EntUserSTutorColumns holds the columns for the "ent_user_STutor" table.
	EntUserSTutorColumns = []*schema.Column{
		{Name: "ent_user_id", Type: field.TypeInt},
		{Name: "SParent_id", Type: field.TypeInt},
	}
	// EntUserSTutorTable holds the schema information for the "ent_user_STutor" table.
	EntUserSTutorTable = &schema.Table{
		Name:       "ent_user_STutor",
		Columns:    EntUserSTutorColumns,
		PrimaryKey: []*schema.Column{EntUserSTutorColumns[0], EntUserSTutorColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_user_STutor_ent_user_id",
				Columns:    []*schema.Column{EntUserSTutorColumns[0]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ent_user_STutor_SParent_id",
				Columns:    []*schema.Column{EntUserSTutorColumns[1]},
				RefColumns: []*schema.Column{EntUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EntAttendancesTable,
		EntCommentsTable,
		EntCoursesTable,
		EntPostsTable,
		EntTodosTable,
		EntUsersTable,
		EntPostShareWithTable,
		EntUserCourseTable,
		EntUserJoinTable,
		EntUserParentTable,
		EntUserTutorTable,
		EntUserSTutorTable,
	}
)

func init() {
	EntAttendancesTable.ForeignKeys[0].RefTable = EntCoursesTable
	EntAttendancesTable.ForeignKeys[1].RefTable = EntUsersTable
	EntCommentsTable.ForeignKeys[0].RefTable = EntPostsTable
	EntCommentsTable.ForeignKeys[1].RefTable = EntUsersTable
	EntPostsTable.ForeignKeys[0].RefTable = EntCoursesTable
	EntPostsTable.ForeignKeys[1].RefTable = EntUsersTable
	EntTodosTable.ForeignKeys[0].RefTable = EntCoursesTable
	EntTodosTable.ForeignKeys[1].RefTable = EntUsersTable
	EntPostShareWithTable.ForeignKeys[0].RefTable = EntPostsTable
	EntPostShareWithTable.ForeignKeys[1].RefTable = EntUsersTable
	EntUserCourseTable.ForeignKeys[0].RefTable = EntUsersTable
	EntUserCourseTable.ForeignKeys[1].RefTable = EntCoursesTable
	EntUserJoinTable.ForeignKeys[0].RefTable = EntUsersTable
	EntUserJoinTable.ForeignKeys[1].RefTable = EntCoursesTable
	EntUserParentTable.ForeignKeys[0].RefTable = EntUsersTable
	EntUserParentTable.ForeignKeys[1].RefTable = EntUsersTable
	EntUserTutorTable.ForeignKeys[0].RefTable = EntUsersTable
	EntUserTutorTable.ForeignKeys[1].RefTable = EntUsersTable
	EntUserSTutorTable.ForeignKeys[0].RefTable = EntUsersTable
	EntUserSTutorTable.ForeignKeys[1].RefTable = EntUsersTable
}
