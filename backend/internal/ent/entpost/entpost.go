// Code generated by ent, DO NOT EDIT.

package entpost

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the entpost type in the database.
	Label = "ent_post"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldShare holds the string denoting the share field in the database.
	FieldShare = "share"
	// EdgeComment holds the string denoting the comment edge name in mutations.
	EdgeComment = "comment"
	// EdgeShareWith holds the string denoting the sharewith edge name in mutations.
	EdgeShareWith = "shareWith"
	// EdgeBelongsTo holds the string denoting the belongsto edge name in mutations.
	EdgeBelongsTo = "belongsTo"
	// EdgeOwnedBy holds the string denoting the ownedby edge name in mutations.
	EdgeOwnedBy = "ownedBy"
	// Table holds the table name of the entpost in the database.
	Table = "ent_posts"
	// CommentTable is the table that holds the comment relation/edge.
	CommentTable = "ent_comments"
	// CommentInverseTable is the table name for the EntComment entity.
	// It exists in this package in order to avoid circular dependency with the "entcomment" package.
	CommentInverseTable = "ent_comments"
	// CommentColumn is the table column denoting the comment relation/edge.
	CommentColumn = "ent_post_comment"
	// ShareWithTable is the table that holds the shareWith relation/edge. The primary key declared below.
	ShareWithTable = "ent_post_shareWith"
	// ShareWithInverseTable is the table name for the EntUser entity.
	// It exists in this package in order to avoid circular dependency with the "entuser" package.
	ShareWithInverseTable = "ent_users"
	// BelongsToTable is the table that holds the belongsTo relation/edge.
	BelongsToTable = "ent_posts"
	// BelongsToInverseTable is the table name for the EntCourse entity.
	// It exists in this package in order to avoid circular dependency with the "entcourse" package.
	BelongsToInverseTable = "ent_courses"
	// BelongsToColumn is the table column denoting the belongsTo relation/edge.
	BelongsToColumn = "ent_course_post"
	// OwnedByTable is the table that holds the ownedBy relation/edge.
	OwnedByTable = "ent_posts"
	// OwnedByInverseTable is the table name for the EntUser entity.
	// It exists in this package in order to avoid circular dependency with the "entuser" package.
	OwnedByInverseTable = "ent_users"
	// OwnedByColumn is the table column denoting the ownedBy relation/edge.
	OwnedByColumn = "ent_user_post"
)

// Columns holds all SQL columns for entpost fields.
var Columns = []string{
	FieldID,
	FieldTimestamp,
	FieldContent,
	FieldShare,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "ent_posts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"ent_course_post",
	"ent_user_post",
}

var (
	// ShareWithPrimaryKey and ShareWithColumn2 are the table columns denoting the
	// primary key for the shareWith relation (M2M).
	ShareWithPrimaryKey = []string{"ent_post_id", "ent_user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTimestamp holds the default value on creation for the "timestamp" field.
	DefaultTimestamp time.Time
)

// Share defines the type for the "share" enum field.
type Share string

// Share values.
const (
	SharePublic  Share = "public"
	SharePrivate Share = "private"
)

func (s Share) String() string {
	return string(s)
}

// ShareValidator is a validator for the "share" field enum values. It is called by the builders before save.
func ShareValidator(s Share) error {
	switch s {
	case SharePublic, SharePrivate:
		return nil
	default:
		return fmt.Errorf("entpost: invalid enum value for share field: %q", s)
	}
}
